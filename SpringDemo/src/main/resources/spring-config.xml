<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	<!-- 基于配置文件 -->

	<bean id="userService" class="com.qingyezhu.spring.service.impl.UserServiceImpl"/>
	
	<bean id="user" class="com.qingyezhu.spring.model.User">
		<property name="id" value="1"/>
		<property name="nick" value="qingyezhu"/>
		<property name="comments">
			<list>
				<value>A little spark kindles a great fire. 星星之火，可以燎原。</value>
				<value>Money is the root of all evil. 金钱是万恶之源。 </value>
				<value>Never judge by appearances. 人不可貌相。</value>
				<value>No great loss without some small gain. 塞翁失马，安知非福。 </value>
				<value>Nothing venture, nothing win (or have or gain). 不入虎穴，焉得虎子。 </value>
			</list>
		</property>
	</bean>
	
	<bean id="parentUser" class="com.qingyezhu.spring.model.User" abstract="true">
		<property name="id" value="0"/>
		<property name="nick" value="hello"/>
		<property name="comments">
			<list>
				<value>A little spark kindles a great fire. 星星之火，可以燎原。</value>
				<value>Money is the root of all evil. 金钱是万恶之源。 </value>
				<value>Never judge by appearances. 人不可貌相。</value>
				<value>No great loss without some small gain. 塞翁失马，安知非福。 </value>
				<value>Nothing venture, nothing win (or have or gain). 不入虎穴，焉得虎子。 </value>
			</list>
		</property>
	</bean>
	
	<bean id="_user1" parent="parentUser">
		<property name="id" value="1"/>
		<property name="nick" value="lili"/>
	</bean>
	
	<bean id="_user2" parent="parentUser">
		<property name="id" value="2"/>
		<property name="nick" value="hanmei"/>
	</bean>	
	
	<bean id="operatorService" class="com.qingyezhu.spring.service.OperatorService"/>
	<bean id="handlerService" class="com.qingyezhu.spring.service.HandlerService"></bean>
	
	<!-- aop start -->
	<bean id="serviceAspect" class="com.qingyezhu.spring.aop.ServiceAspect"/>
	<!-- aop配置 -->
	<aop:config>
		<!-- 默认使用JDK的动态代理，此时使用的是CGLib机制 -->
		<!-- 如果目标对象实现了接口，默认情况下会采用JDK的动态代理实现AOP； -->
		<!-- 如果目标对象实现了接口，也可以强制使用Cglib实现AOP； -->
		<!-- 如果目标对象没有实现接口，必须采用Cglib； -->
		<!-- Spring会自动在JDK动态代理和Cglib之间转换 -->
		<!-- JDK动态代理只能对实现了接口的类生成代理，而不能针对类 -->
		<!-- Cglib是正对类实现代理，主要是对指定的类生成一个子类，覆盖其中的方法 -->
		<!-- 因为是 继承，所以该类一定不要声明成final，而方法最好不要声明成final-->
		<!-- 切入点：拦截的方法 -->
		<aop:pointcut expression="execution(* com.qingyezhu.spring.service..*(..))" id="servicePt"/>
			
		<!-- 切面 -->
		<aop:aspect ref="serviceAspect">
			<!-- 环绕通知 -->
			<aop:around method="doAround" pointcut-ref="servicePt"/>
			<!-- 前置 -->
			<aop:before method="doBefore" pointcut-ref="servicePt"/>
			<!-- 后置（包括异常和返回） -->
			<aop:after method="doAfter" pointcut-ref="servicePt"/>
			<!-- 异常 -->
			<aop:after-throwing method="doThrowing" throwing="ex" pointcut-ref="servicePt"/>
			<!-- 返回 -->
			<aop:after-returning method="doReturning" pointcut-ref="servicePt"/>
		</aop:aspect>
	</aop:config>
	
</beans>